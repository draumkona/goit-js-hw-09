{"mappings":"AAAA,MAAMA,EAAgBC,SAASC,cAAc,gBACvCC,EAAOF,SAASC,cAAc,SAGpCF,EAAcI,UAAW,EAEzB,MACEC,UAAUC,MAAEC,EAAKC,KAAEC,EAAIC,OAAEC,IAAaR,EAExC,SAASS,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAACK,SAAAR,EAAUP,MAAAQ,IAEnBG,EAAQ,CAACI,SAAAR,EAAUP,MAAAQ,GAAO,GAE3BA,EAAM,G,CAkBbX,EAAKmB,iBAAiB,UAdtB,SAAuBC,GACrBA,EAAMC,iBACNxB,EAAcI,UAAW,EACzB,IAAK,IAAIqB,EAAI,EAAGA,GAAKd,EAAOe,MAAOD,GAAK,EACtCb,EAAca,EAAI,EAAGE,OAAOpB,EAAMmB,OAASC,OAAOlB,EAAKiB,OAASD,GAC7DG,MAAK,EAAGP,SAAAQ,EAAUvB,MAAAwB,MACjBC,QAAQC,IAAI,uBAAqBH,QAAiBC,MAAU,IAE7DG,OAAM,EAAGZ,SAAAa,EAAU5B,MAAA6B,MAClBJ,QAAQC,IAAI,sBAAoBE,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["const promiseButton = document.querySelector(\".form button\");\nconst form = document.querySelector(\".form\");\n\nlet position = \"\";\npromiseButton.disabled = false;\n\nconst {\n  elements: { delay, step, amount } } = form;\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({position, delay})\n      } else {\n        reject ({position, delay})\n      }\n    }, delay)\n  })\n}\n\nfunction submitProcess(event) {\n  event.preventDefault();\n  promiseButton.disabled = true;\n  for (let i = 0; i <= amount.value; i += 1) {\n    createPromise(i + 1, Number(delay.value) + Number(step.value) * i)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n};\n\nform.addEventListener(\"submit\", submitProcess);"],"names":["$47d4ff9957288465$var$promiseButton","document","querySelector","$47d4ff9957288465$var$form","disabled","elements","delay","$47d4ff9957288465$var$delay","step","$47d4ff9957288465$var$step","amount","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position1","delay1","Promise","resolve","reject","setTimeout","Math","random","position","addEventListener","event","preventDefault","i","value","Number","then","position2","delay2","console","log","catch","position3","delay3"],"version":3,"file":"03-promises.ec2bc9b7.js.map"}